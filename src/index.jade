doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Storm Tutorial

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section(data-bespoke-state='emphatic')
        h1 Storm Tutorial

      section(data-bespoke-state='emphatic')
        h2 Storm System
        h3.bullet Process streams of data
        ul
          li Distributed
          li Reliable
          li Fault-tolerant

      section(data-bespoke-state='emphatic')
        h2.bullet Storm Basics
        ul
          li Spout : handles input stream of a storm cluster
          li Bolt : acquires data to process from spout

      section(data-bespoke-state='emphatic')
        h2 Example Code
        pre
          code.language-javascript.
            builder.setSpout("spout", new RandomSentenceSpout(), 5);
            builder.setBolt("split", new SplitSentence(), 8).shuffleGrouping("spout"); 
        ul.bullet
          li Input stream sends data to spout (here named spout)
          li Bolt acquires the data from spout (here bold named split)
          li 
            h6 Do not worry about syntax which will be explained later

      section(data-bespoke-state='emphatic')
        h2 Topology
        h3.bullet Graph of computation
        ul
          li Need to run topologies 
          li Topologies process message forever

      section(data-bespoke-state='emphatic')
        h3 Two types of nodes
        h2 Master and Worker Node
        ul.bullet
          li Master node runs daemon called 
            strong Nimbus
          li Worker node runs daemon called 
            strong Supervisor

      section(data-bespoke-state='emphatic')
        h2 Master : Nimbus
        ul.bullet
          li responsible for distributing code around cluster
          li assigns tasks to machines
          li does monitoring for failures

      section(data-bespoke-state='emphatic')
        h2 Worker : Supervisor
        ul.bullet
          li listens for work assigned
          li starts and stops worker processes
          li executes subset of topology
      
      section(data-bespoke-state='emphatic')
        h2 Zookeeper
        h3.bullet maintains State
        ul
          li 
            em storm cluster incredibly stable

      section(data-bespoke-state='emphatic')
        h2 Storm UI
        ul.bullet
          li provides detailed information about cluster and topology
          li detailed spout and bolt component information

      section(data-bespoke-state='emphatic')
        h2 Components to run Storm
        ul.bullet
          li Zookeeper
          li Nimbus
          li Supervisor
          li UI (to see detailed information)
          li Storm (apache project)
          li Jar file
          li Topology

      section(data-bespoke-state='emphatic')
        p To run storm on local machine download storm and zookeeper
        ul.bullet
          li Run Zookeeper in Zookeeper directory (eg: zookeeper-3.4.6) using
            pre
              code.language-javascript.
                .\bin\zkServer.cmd
          li Run Storm Nimbus, Supervisor and UI in Storm Home directory
            pre
              code.language-javascript.
                storm nimbus
                storm supervisor
                storm ui
          li 
            em Need to run zookeepr first before running nimbus, supervisor and ui
          li 
            <a href="http://ptgoetz.github.io/blog/2013/12/18/running-apache-storm-on-windows/">Running Apache Storm on Windows </a>
          li Works on Windows 8.1

      section(data-bespoke-state='emphatic')
        h4 This material will be updated regularly

    script(src='build/build.js')